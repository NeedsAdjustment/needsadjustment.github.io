<fieldset class="toggle-group" id="colorScheme">
  <label title="Light Mode">
    <input type="radio" name="color-scheme" id="color-scheme-light" value="0" data-sr />
    <div class="icon-container">
      <i class="ph ph-sun regular-icon"></i>
      <i class="ph-fill ph-sun filled-icon"></i>
    </div>
    <span data-sr>Light</span>
  </label>
  <label title="Dark Mode">
    <input type="radio" name="color-scheme" id="color-scheme-dark" value="1" data-sr />
    <div class="icon-container">
      <i class="ph ph-moon regular-icon"></i>
      <i class="ph-fill ph-moon filled-icon"></i>
    </div>
    <span data-sr>Dark</span>
  </label>
</fieldset>

<style>
  /* Toggle group styles */
  .toggle-group {
    backdrop-filter: blur(16px);
    background-color: var(--secondary-background);
    border-radius: var(--radius-full);
    inline-size: fit-content;
    padding: var(--space-xs);
    border: none;
    position: relative;
    filter: none;
    transition: filter 0.8s ease;
    box-sizing: border-box;
    max-height: 114px;
    overflow: visible;
  }

  /* Fieldset styling */
  fieldset.toggle-group {
    border: none;
    padding: var(--space-xs);
    margin: 0;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  /* Toggle label styling */
  .toggle-group label {
    border-radius: var(--radius-full);
    cursor: pointer;
    display: inline-flex;
    padding: var(--space-xs);
    width: 2.5em;
    height: 2.5em;
    text-align: center;
    user-select: none;
    font-size: clamp(0.75rem, 1vw + 0.25rem, 0.9rem);
    align-items: center;
    justify-content: center;
    color: var(--text-color);
    line-height: 1;
    box-sizing: border-box;
    position: relative;
    z-index: 1;
    background-color: transparent;
  }

  /* Selected label styles */
  :global(.toggle-group label:has(input:checked)) {
    background-color: var(--toggle-accent-color);
    color: var(--background-color);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    z-index: 2;
  }

  /* Icon container styling */
  .icon-container {
    position: relative;
    width: 1.5em;
    height: 1.5em;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
    transform-origin: center;
  }

  /* Phosphor icons styling */
  .toggle-group .ph {
    font-size: 1.2em;
    position: absolute;
    line-height: 1;
  }

  .regular-icon {
    opacity: 1;
  }

  .filled-icon {
    opacity: 0;
  }

  :global(.toggle-group label:has(input:checked) .regular-icon) {
    opacity: 0;
  }

  :global(.toggle-group label:has(input:checked) .filled-icon) {
    opacity: 1;
    filter: drop-shadow(0 0 2px rgba(255, 255, 255, 0.2));
  }
  
  /* Icon animations */
  :global(.toggle-group label:not(:has(input:checked)):hover .icon-container) {
    animation: lazy-wobble 1s ease-in-out 1;
  }

  :global(.toggle-group label:not(:has(input:checked)) .icon-container) {
    animation: lazy-wobble-2 20s linear 5s infinite;
  }

  @keyframes lazy-wobble {
    33% {
      transform: rotate(-20deg);
    }
    67% {
      transform: rotate(20deg);
    }
  }

  @keyframes lazy-wobble-2 {
    1.5% {
      transform: rotate(90deg) scale(0.9);
    }
    3% {
      transform: rotate(180deg) scale(1.1);
    }
    4.5% {
      transform: rotate(270deg) scale(0.9);
    }
    6% {
      transform: rotate(360deg) scale(1);
    }
    100% {
      transform: rotate(360deg);
    }
  }
</style>